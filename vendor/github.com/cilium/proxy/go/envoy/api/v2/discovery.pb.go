// Code generated by protoc-gen-go. DO NOT EDIT.
// source: envoy/api/v2/discovery.proto

package v2

import (
	fmt "fmt"
	core "github.com/cilium/proxy/go/envoy/api/v2/core"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	status "google.golang.org/genproto/googleapis/rpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A DiscoveryRequest requests a set of versioned resources of the same type for
// a given Envoy node on some API.
type DiscoveryRequest struct {
	// The version_info provided in the request messages will be the version_info
	// received with the most recent successfully processed response or empty on
	// the first request. It is expected that no new request is sent after a
	// response is received until the Envoy instance is ready to ACK/NACK the new
	// configuration. ACK/NACK takes place by returning the new API config version
	// as applied or the previous API config version respectively. Each type_url
	// (see below) has an independent version associated with it.
	VersionInfo string `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// The node making the request.
	Node *core.Node `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	// List of resources to subscribe to, e.g. list of cluster names or a route
	// configuration name. If this is empty, all resources for the API are
	// returned. LDS/CDS expect empty resource_names, since this is global
	// discovery for the Envoy instance. The LDS and CDS responses will then imply
	// a number of resources that need to be fetched via EDS/RDS, which will be
	// explicitly enumerated in resource_names.
	ResourceNames []string `protobuf:"bytes,3,rep,name=resource_names,json=resourceNames,proto3" json:"resource_names,omitempty"`
	// Type of the resource that is being requested, e.g.
	// "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
	// in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
	// required for ADS.
	TypeUrl string `protobuf:"bytes,4,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	// nonce corresponding to DiscoveryResponse being ACK/NACKed. See above
	// discussion on version_info and the DiscoveryResponse nonce comment. This
	// may be empty if no nonce is available, e.g. at startup or for non-stream
	// xDS implementations.
	ResponseNonce string `protobuf:"bytes,5,opt,name=response_nonce,json=responseNonce,proto3" json:"response_nonce,omitempty"`
	// This is populated when the previous :ref:`DiscoveryResponse <envoy_api_msg_DiscoveryResponse>`
	// failed to update configuration. The *message* field in *error_details* provides the Envoy
	// internal exception related to the failure. It is only intended for consumption during manual
	// debugging, the string provided is not guaranteed to be stable across Envoy versions.
	ErrorDetail          *status.Status `protobuf:"bytes,6,opt,name=error_detail,json=errorDetail,proto3" json:"error_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DiscoveryRequest) Reset()         { *m = DiscoveryRequest{} }
func (m *DiscoveryRequest) String() string { return proto.CompactTextString(m) }
func (*DiscoveryRequest) ProtoMessage()    {}
func (*DiscoveryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c7365e287e5c035, []int{0}
}

func (m *DiscoveryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryRequest.Unmarshal(m, b)
}
func (m *DiscoveryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryRequest.Marshal(b, m, deterministic)
}
func (m *DiscoveryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryRequest.Merge(m, src)
}
func (m *DiscoveryRequest) XXX_Size() int {
	return xxx_messageInfo_DiscoveryRequest.Size(m)
}
func (m *DiscoveryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryRequest proto.InternalMessageInfo

func (m *DiscoveryRequest) GetVersionInfo() string {
	if m != nil {
		return m.VersionInfo
	}
	return ""
}

func (m *DiscoveryRequest) GetNode() *core.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *DiscoveryRequest) GetResourceNames() []string {
	if m != nil {
		return m.ResourceNames
	}
	return nil
}

func (m *DiscoveryRequest) GetTypeUrl() string {
	if m != nil {
		return m.TypeUrl
	}
	return ""
}

func (m *DiscoveryRequest) GetResponseNonce() string {
	if m != nil {
		return m.ResponseNonce
	}
	return ""
}

func (m *DiscoveryRequest) GetErrorDetail() *status.Status {
	if m != nil {
		return m.ErrorDetail
	}
	return nil
}

type DiscoveryResponse struct {
	// The version of the response data.
	VersionInfo string `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// The response resources. These resources are typed and depend on the API being called.
	Resources []*any.Any `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	// [#not-implemented-hide:]
	// Canary is used to support two Envoy command line flags:
	//
	// * --terminate-on-canary-transition-failure. When set, Envoy is able to
	//   terminate if it detects that configuration is stuck at canary. Consider
	//   this example sequence of updates:
	//   - Management server applies a canary config successfully.
	//   - Management server rolls back to a production config.
	//   - Envoy rejects the new production config.
	//   Since there is no sensible way to continue receiving configuration
	//   updates, Envoy will then terminate and apply production config from a
	//   clean slate.
	// * --dry-run-canary. When set, a canary response will never be applied, only
	//   validated via a dry run.
	Canary bool `protobuf:"varint,3,opt,name=canary,proto3" json:"canary,omitempty"`
	// Type URL for resources. This must be consistent with the type_url in the
	// Any messages for resources if resources is non-empty. This effectively
	// identifies the xDS API when muxing over ADS.
	TypeUrl string `protobuf:"bytes,4,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	// For gRPC based subscriptions, the nonce provides a way to explicitly ack a
	// specific DiscoveryResponse in a following DiscoveryRequest. Additional
	// messages may have been sent by Envoy to the management server for the
	// previous version on the stream prior to this DiscoveryResponse, that were
	// unprocessed at response send time. The nonce allows the management server
	// to ignore any further DiscoveryRequests for the previous version until a
	// DiscoveryRequest bearing the nonce. The nonce is optional and is not
	// required for non-stream based xDS implementations.
	Nonce string `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// [#not-implemented-hide:]
	// The control plane instance that sent the response.
	ControlPlane         *core.ControlPlane `protobuf:"bytes,6,opt,name=control_plane,json=controlPlane,proto3" json:"control_plane,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DiscoveryResponse) Reset()         { *m = DiscoveryResponse{} }
func (m *DiscoveryResponse) String() string { return proto.CompactTextString(m) }
func (*DiscoveryResponse) ProtoMessage()    {}
func (*DiscoveryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c7365e287e5c035, []int{1}
}

func (m *DiscoveryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryResponse.Unmarshal(m, b)
}
func (m *DiscoveryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryResponse.Marshal(b, m, deterministic)
}
func (m *DiscoveryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryResponse.Merge(m, src)
}
func (m *DiscoveryResponse) XXX_Size() int {
	return xxx_messageInfo_DiscoveryResponse.Size(m)
}
func (m *DiscoveryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryResponse proto.InternalMessageInfo

func (m *DiscoveryResponse) GetVersionInfo() string {
	if m != nil {
		return m.VersionInfo
	}
	return ""
}

func (m *DiscoveryResponse) GetResources() []*any.Any {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *DiscoveryResponse) GetCanary() bool {
	if m != nil {
		return m.Canary
	}
	return false
}

func (m *DiscoveryResponse) GetTypeUrl() string {
	if m != nil {
		return m.TypeUrl
	}
	return ""
}

func (m *DiscoveryResponse) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

func (m *DiscoveryResponse) GetControlPlane() *core.ControlPlane {
	if m != nil {
		return m.ControlPlane
	}
	return nil
}

// IncrementalDiscoveryRequest and IncrementalDiscoveryResponse are used in a
// new gRPC endpoint for Incremental xDS. The feature is not supported for REST
// management servers.
//
// With Incremental xDS, the IncrementalDiscoveryResponses do not need to
// include a full snapshot of the tracked resources. Instead
// IncrementalDiscoveryResponses are a diff to the state of a xDS client.
// In Incremental XDS there are per resource versions which allows to track
// state at the resource granularity.
// An xDS Incremental session is always in the context of a gRPC bidirectional
// stream. This allows the xDS server to keep track of the state of xDS clients
// connected to it.
//
// In Incremental xDS the nonce field is required and used to pair
// IncrementalDiscoveryResponse to a IncrementalDiscoveryRequest ACK or NACK.
// Optionally, a response message level system_version_info is present for
// debugging purposes only.
//
// IncrementalDiscoveryRequest can be sent in 3 situations:
//   1. Initial message in a xDS bidirectional gRPC stream.
//   2. As a ACK or NACK response to a previous IncrementalDiscoveryResponse.
//      In this case the response_nonce is set to the nonce value in the Response.
//      ACK or NACK is determined by the absence or presence of error_detail.
//   3. Spontaneous IncrementalDiscoveryRequest from the client.
//      This can be done to dynamically add or remove elements from the tracked
//      resource_names set. In this case response_nonce must be omitted.
type IncrementalDiscoveryRequest struct {
	// The node making the request.
	Node *core.Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	// Type of the resource that is being requested, e.g.
	// "type.googleapis.com/envoy.api.v2.ClusterLoadAssignment". This is implicit
	// in requests made via singleton xDS APIs such as CDS, LDS, etc. but is
	// required for ADS.
	TypeUrl string `protobuf:"bytes,2,opt,name=type_url,json=typeUrl,proto3" json:"type_url,omitempty"`
	// IncrementalDiscoveryRequests allow the client to add or remove individual
	// resources to the set of tracked resources in the context of a stream.
	// All resource names in the resource_names_subscribe list are added to the
	// set of tracked resources and all resource names in the resource_names_unsubscribe
	// list are removed from the set of tracked resources.
	// Unlike in non incremental xDS, an empty resource_names_subscribe or
	// resource_names_unsubscribe list simply means that no resources are to be
	// added or removed to the resource list.
	// The xDS server must send updates for all tracked resources but can also
	// send updates for resources the client has not subscribed to. This behavior
	// is similar to non incremental xDS.
	// These two fields can be set for all types of IncrementalDiscoveryRequests
	// (initial, ACK/NACK or spontaneous).
	//
	// A list of Resource names to add to the list of tracked resources.
	ResourceNamesSubscribe []string `protobuf:"bytes,3,rep,name=resource_names_subscribe,json=resourceNamesSubscribe,proto3" json:"resource_names_subscribe,omitempty"`
	// A list of Resource names to remove from the list of tracked resources.
	ResourceNamesUnsubscribe []string `protobuf:"bytes,4,rep,name=resource_names_unsubscribe,json=resourceNamesUnsubscribe,proto3" json:"resource_names_unsubscribe,omitempty"`
	// This map must be populated when the IncrementalDiscoveryRequest is the
	// first in a stream. The keys are the resources names of the xDS resources
	// known to the xDS client. The values in the map are the associated resource
	// level version info.
	InitialResourceVersions map[string]string `protobuf:"bytes,5,rep,name=initial_resource_versions,json=initialResourceVersions,proto3" json:"initial_resource_versions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// When the IncrementalDiscoveryRequest is a ACK or NACK message in response
	// to a previous IncrementalDiscoveryResponse, the response_nonce must be the
	// nonce in the IncrementalDiscoveryResponse.
	// Otherwise response_nonce must be omitted.
	ResponseNonce string `protobuf:"bytes,6,opt,name=response_nonce,json=responseNonce,proto3" json:"response_nonce,omitempty"`
	// This is populated when the previous :ref:`DiscoveryResponse <envoy_api_msg_DiscoveryResponse>`
	// failed to update configuration. The *message* field in *error_details*
	// provides the Envoy internal exception related to the failure.
	ErrorDetail          *status.Status `protobuf:"bytes,7,opt,name=error_detail,json=errorDetail,proto3" json:"error_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *IncrementalDiscoveryRequest) Reset()         { *m = IncrementalDiscoveryRequest{} }
func (m *IncrementalDiscoveryRequest) String() string { return proto.CompactTextString(m) }
func (*IncrementalDiscoveryRequest) ProtoMessage()    {}
func (*IncrementalDiscoveryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c7365e287e5c035, []int{2}
}

func (m *IncrementalDiscoveryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementalDiscoveryRequest.Unmarshal(m, b)
}
func (m *IncrementalDiscoveryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementalDiscoveryRequest.Marshal(b, m, deterministic)
}
func (m *IncrementalDiscoveryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementalDiscoveryRequest.Merge(m, src)
}
func (m *IncrementalDiscoveryRequest) XXX_Size() int {
	return xxx_messageInfo_IncrementalDiscoveryRequest.Size(m)
}
func (m *IncrementalDiscoveryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementalDiscoveryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementalDiscoveryRequest proto.InternalMessageInfo

func (m *IncrementalDiscoveryRequest) GetNode() *core.Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *IncrementalDiscoveryRequest) GetTypeUrl() string {
	if m != nil {
		return m.TypeUrl
	}
	return ""
}

func (m *IncrementalDiscoveryRequest) GetResourceNamesSubscribe() []string {
	if m != nil {
		return m.ResourceNamesSubscribe
	}
	return nil
}

func (m *IncrementalDiscoveryRequest) GetResourceNamesUnsubscribe() []string {
	if m != nil {
		return m.ResourceNamesUnsubscribe
	}
	return nil
}

func (m *IncrementalDiscoveryRequest) GetInitialResourceVersions() map[string]string {
	if m != nil {
		return m.InitialResourceVersions
	}
	return nil
}

func (m *IncrementalDiscoveryRequest) GetResponseNonce() string {
	if m != nil {
		return m.ResponseNonce
	}
	return ""
}

func (m *IncrementalDiscoveryRequest) GetErrorDetail() *status.Status {
	if m != nil {
		return m.ErrorDetail
	}
	return nil
}

type IncrementalDiscoveryResponse struct {
	// The version of the response data (used for debugging).
	SystemVersionInfo string `protobuf:"bytes,1,opt,name=system_version_info,json=systemVersionInfo,proto3" json:"system_version_info,omitempty"`
	// The response resources. These are typed resources that match the type url
	// in the IncrementalDiscoveryRequest.
	Resources []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
	// Resources names of resources that have be deleted and to be removed from the xDS Client.
	// Removed resources for missing resources can be ignored.
	RemovedResources []string `protobuf:"bytes,6,rep,name=removed_resources,json=removedResources,proto3" json:"removed_resources,omitempty"`
	// The nonce provides a way for IncrementalDiscoveryRequests to uniquely
	// reference a IncrementalDiscoveryResponse. The nonce is required.
	Nonce                string   `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrementalDiscoveryResponse) Reset()         { *m = IncrementalDiscoveryResponse{} }
func (m *IncrementalDiscoveryResponse) String() string { return proto.CompactTextString(m) }
func (*IncrementalDiscoveryResponse) ProtoMessage()    {}
func (*IncrementalDiscoveryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c7365e287e5c035, []int{3}
}

func (m *IncrementalDiscoveryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementalDiscoveryResponse.Unmarshal(m, b)
}
func (m *IncrementalDiscoveryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementalDiscoveryResponse.Marshal(b, m, deterministic)
}
func (m *IncrementalDiscoveryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementalDiscoveryResponse.Merge(m, src)
}
func (m *IncrementalDiscoveryResponse) XXX_Size() int {
	return xxx_messageInfo_IncrementalDiscoveryResponse.Size(m)
}
func (m *IncrementalDiscoveryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementalDiscoveryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementalDiscoveryResponse proto.InternalMessageInfo

func (m *IncrementalDiscoveryResponse) GetSystemVersionInfo() string {
	if m != nil {
		return m.SystemVersionInfo
	}
	return ""
}

func (m *IncrementalDiscoveryResponse) GetResources() []*Resource {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *IncrementalDiscoveryResponse) GetRemovedResources() []string {
	if m != nil {
		return m.RemovedResources
	}
	return nil
}

func (m *IncrementalDiscoveryResponse) GetNonce() string {
	if m != nil {
		return m.Nonce
	}
	return ""
}

type Resource struct {
	// The resource level version. It allows xDS to track the state of individual
	// resources.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// The resource being tracked.
	Resource             *any.Any `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resource) Reset()         { *m = Resource{} }
func (m *Resource) String() string { return proto.CompactTextString(m) }
func (*Resource) ProtoMessage()    {}
func (*Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c7365e287e5c035, []int{4}
}

func (m *Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resource.Unmarshal(m, b)
}
func (m *Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resource.Marshal(b, m, deterministic)
}
func (m *Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resource.Merge(m, src)
}
func (m *Resource) XXX_Size() int {
	return xxx_messageInfo_Resource.Size(m)
}
func (m *Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_Resource proto.InternalMessageInfo

func (m *Resource) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Resource) GetResource() *any.Any {
	if m != nil {
		return m.Resource
	}
	return nil
}

func init() {
	proto.RegisterType((*DiscoveryRequest)(nil), "envoy.api.v2.DiscoveryRequest")
	proto.RegisterType((*DiscoveryResponse)(nil), "envoy.api.v2.DiscoveryResponse")
	proto.RegisterType((*IncrementalDiscoveryRequest)(nil), "envoy.api.v2.IncrementalDiscoveryRequest")
	proto.RegisterMapType((map[string]string)(nil), "envoy.api.v2.IncrementalDiscoveryRequest.InitialResourceVersionsEntry")
	proto.RegisterType((*IncrementalDiscoveryResponse)(nil), "envoy.api.v2.IncrementalDiscoveryResponse")
	proto.RegisterType((*Resource)(nil), "envoy.api.v2.Resource")
}

func init() { proto.RegisterFile("envoy/api/v2/discovery.proto", fileDescriptor_2c7365e287e5c035) }

var fileDescriptor_2c7365e287e5c035 = []byte{
	// 668 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcf, 0x4e, 0xdb, 0x4e,
	0x10, 0xfe, 0x39, 0x09, 0x21, 0x4c, 0x02, 0x82, 0xfd, 0x21, 0x30, 0x29, 0x2a, 0x69, 0xa4, 0x4a,
	0x91, 0x90, 0xec, 0x2a, 0x55, 0x2b, 0x84, 0x7a, 0x29, 0xa5, 0x95, 0xe8, 0x01, 0x21, 0x23, 0x38,
	0xf4, 0x62, 0x6d, 0x9c, 0x21, 0xb2, 0xea, 0xec, 0xba, 0xbb, 0xb6, 0x55, 0x5f, 0x39, 0xf7, 0x41,
	0xfa, 0x28, 0xbd, 0xf4, 0x15, 0x7a, 0xe8, 0x8b, 0xb4, 0xf2, 0x7a, 0x9d, 0xd8, 0xc5, 0x42, 0xb9,
	0x79, 0x66, 0xbe, 0xf9, 0x76, 0xfe, 0x7c, 0x63, 0x38, 0x44, 0x96, 0xf0, 0xd4, 0xa6, 0xa1, 0x6f,
	0x27, 0x63, 0x7b, 0xea, 0x4b, 0x8f, 0x27, 0x28, 0x52, 0x2b, 0x14, 0x3c, 0xe2, 0xa4, 0xa7, 0xa2,
	0x16, 0x0d, 0x7d, 0x2b, 0x19, 0xf7, 0xab, 0x58, 0x8f, 0x0b, 0xb4, 0x27, 0x54, 0x62, 0x8e, 0xed,
	0x1f, 0xcc, 0x38, 0x9f, 0x05, 0x68, 0x2b, 0x6b, 0x12, 0xdf, 0xd9, 0x94, 0x69, 0x9a, 0xfe, 0xbe,
	0x0e, 0x89, 0xd0, 0xb3, 0x65, 0x44, 0xa3, 0x58, 0xea, 0xc0, 0xee, 0x8c, 0xcf, 0xb8, 0xfa, 0xb4,
	0xb3, 0xaf, 0xdc, 0x3b, 0xbc, 0x6f, 0xc0, 0xf6, 0x79, 0x51, 0x89, 0x83, 0x5f, 0x62, 0x94, 0x11,
	0x79, 0x06, 0xbd, 0x04, 0x85, 0xf4, 0x39, 0x73, 0x7d, 0x76, 0xc7, 0x4d, 0x63, 0x60, 0x8c, 0x36,
	0x9c, 0xae, 0xf6, 0x5d, 0xb0, 0x3b, 0x4e, 0x8e, 0xa1, 0xc5, 0xf8, 0x14, 0xcd, 0xc6, 0xc0, 0x18,
	0x75, 0xc7, 0xfb, 0x56, 0xb9, 0x78, 0x2b, 0x2b, 0xd7, 0xba, 0xe4, 0x53, 0x74, 0x14, 0x88, 0x3c,
	0x87, 0x2d, 0x81, 0x92, 0xc7, 0xc2, 0x43, 0x97, 0xd1, 0x39, 0x4a, 0xb3, 0x39, 0x68, 0x8e, 0x36,
	0x9c, 0xcd, 0xc2, 0x7b, 0x99, 0x39, 0xc9, 0x01, 0x74, 0xa2, 0x34, 0x44, 0x37, 0x16, 0x81, 0xd9,
	0x52, 0x4f, 0xae, 0x67, 0xf6, 0x8d, 0x08, 0x34, 0x43, 0xc8, 0x99, 0x44, 0x97, 0x71, 0xe6, 0xa1,
	0xb9, 0xa6, 0x00, 0x9b, 0x85, 0xf7, 0x32, 0x73, 0x92, 0x57, 0xd0, 0x43, 0x21, 0xb8, 0x70, 0xa7,
	0x18, 0x51, 0x3f, 0x30, 0xdb, 0xaa, 0x3a, 0x62, 0xe5, 0x33, 0xb1, 0x44, 0xe8, 0x59, 0xd7, 0x6a,
	0x26, 0x4e, 0x57, 0xe1, 0xce, 0x15, 0x6c, 0xf8, 0xc7, 0x80, 0x9d, 0xd2, 0x10, 0x72, 0xc6, 0x55,
	0xa6, 0x70, 0x02, 0x1b, 0x45, 0x0b, 0xd2, 0x6c, 0x0c, 0x9a, 0xa3, 0xee, 0x78, 0xb7, 0x78, 0xac,
	0xd8, 0x8d, 0xf5, 0x96, 0xa5, 0x67, 0xad, 0x1f, 0xbf, 0x8e, 0xfe, 0x73, 0x96, 0x60, 0xb2, 0x07,
	0x6d, 0x8f, 0x32, 0x2a, 0x52, 0xb3, 0x39, 0x30, 0x46, 0x1d, 0x47, 0x5b, 0x8f, 0xcd, 0x60, 0x17,
	0xd6, 0xca, 0xad, 0xe7, 0x06, 0x39, 0x87, 0x4d, 0x8f, 0xb3, 0x48, 0xf0, 0xc0, 0x0d, 0x03, 0xca,
	0x50, 0xf7, 0x7c, 0x54, 0xb3, 0x91, 0x77, 0x39, 0xee, 0x2a, 0x83, 0x39, 0x3d, 0xaf, 0x64, 0x0d,
	0xbf, 0xb5, 0xe0, 0xc9, 0x05, 0xf3, 0x04, 0xce, 0x91, 0x45, 0x34, 0x78, 0xa0, 0x88, 0x62, 0xdd,
	0xc6, 0x2a, 0xeb, 0x2e, 0xf7, 0xd0, 0xa8, 0xf6, 0x70, 0x02, 0x66, 0x55, 0x09, 0xae, 0x8c, 0x27,
	0xd2, 0x13, 0xfe, 0x04, 0xb5, 0x26, 0xf6, 0x2a, 0x9a, 0xb8, 0x2e, 0xa2, 0xe4, 0x0d, 0xf4, 0xff,
	0xc9, 0x8c, 0xd9, 0x32, 0xb7, 0xa5, 0x72, 0xcd, 0x4a, 0xee, 0xcd, 0x32, 0x4e, 0xee, 0x0d, 0x38,
	0xf0, 0x99, 0x1f, 0xf9, 0x34, 0x70, 0x17, 0x34, 0x7a, 0x93, 0xd2, 0x5c, 0x53, 0x9b, 0xfb, 0x50,
	0xed, 0xea, 0x91, 0x71, 0x58, 0x17, 0x39, 0x95, 0xa3, 0x99, 0x6e, 0x35, 0xd1, 0x7b, 0x16, 0x89,
	0xd4, 0xd9, 0xf7, 0xeb, 0xa3, 0x35, 0x22, 0x6e, 0xaf, 0x22, 0xe2, 0xf5, 0x95, 0x44, 0xdc, 0xff,
	0x08, 0x87, 0x8f, 0x95, 0x45, 0xb6, 0xa1, 0xf9, 0x19, 0x53, 0xad, 0xe2, 0xec, 0x33, 0x13, 0x54,
	0x42, 0x83, 0x18, 0xf5, 0x92, 0x72, 0xe3, 0xb4, 0x71, 0x62, 0x0c, 0x7f, 0x1a, 0x19, 0x59, 0x5d,
	0xff, 0xfa, 0x36, 0x2c, 0xf8, 0x5f, 0xa6, 0x32, 0xc2, 0xb9, 0x5b, 0x73, 0x22, 0x3b, 0x79, 0xe8,
	0xb6, 0x74, 0x28, 0xa7, 0x0f, 0x0f, 0x65, 0xaf, 0x3a, 0xee, 0xa2, 0xe8, 0x87, 0xa7, 0x72, 0x0c,
	0x3b, 0x02, 0xe7, 0x3c, 0xc1, 0xa9, 0xbb, 0xe4, 0x68, 0xab, 0x85, 0x6f, 0xeb, 0x80, 0xb3, 0x00,
	0xd7, 0x1e, 0xc9, 0xf0, 0x16, 0x3a, 0x05, 0x84, 0x98, 0xb0, 0xae, 0x6b, 0xd6, 0xe5, 0x16, 0x26,
	0x79, 0x01, 0x9d, 0xe2, 0x01, 0xfd, 0x5f, 0xab, 0x3d, 0x66, 0x67, 0x81, 0x3a, 0x7b, 0xfd, 0xfd,
	0xf7, 0x53, 0x03, 0xfa, 0x3e, 0xcf, 0x7b, 0x09, 0x05, 0xff, 0x9a, 0x56, 0xda, 0x3a, 0xdb, 0x5a,
	0xcc, 0xee, 0x2a, 0xa3, 0xb8, 0x32, 0x3e, 0x35, 0x92, 0xf1, 0xa4, 0xad, 0xf8, 0x5e, 0xfe, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0xe8, 0x90, 0x11, 0x6e, 0x12, 0x06, 0x00, 0x00,
}
